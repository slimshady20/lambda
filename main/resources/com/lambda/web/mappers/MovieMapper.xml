<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lambda.web.mappers.MovieMapper">

    <insert id="insertMovie"
            parameterType="com.lambda.web.movies.MovieDTO">
        insert rank, title,gap, rank_date into movie
        values  (#{rank},#{title},#{rankDate},#{gap})
        title,seq,gap,rankDate
    </insert>

    <update id="updateMovie"
            parameterType="com.lambda.web.movies.MovieDTO">
            update set title = #{title} from movie
        where movie_seq like #{movieSeq}
    </update>

    <delete id="deleteMovie"
            parameterType="com.lambda.web.movies.MovieDTO">
         delete from movie where movie_seq like #{movieSeq}
    </delete>

    <select id="selectMovies" resultType="com.lambda.web.movies.MovieDTO"
            parameterType="com.lambda.web.proxy.Pager">
     select movie_seq movieSeq, rank, title, rank_date rankDate, gap
      from movie
      <if test="searchWord != null">
      where title like '%${searchWord}%'
      </if>
      limit #{rowStart}, #{pageSize}    /* rowStart 번째부터  pagesize수만큼 가져옴*/


    </select>
    <select id="selectMovie" resultType="com.lambda.web.movies.MovieDTO"
                                parameterType="com.lambda.web.movies.MovieDTO">
          select movie_seq movieSeq, rank,gap, title, rank_date rankDate
      from movie
      where movie_seq = #{value}
    </select>

    <select id="count" resultType="int">
      select count(*)
      from movie
    </select>

<!--    <select id="switchMovie"-->
<!--            parameterType="com.lambda.web.music.MovieDTO"-->
<!--            resultType="com.lambda.web.music.MovieDTO">-->
<!--        SELECT movie_seq movieSeq, rank, title, rank_date rankDate, gap-->
<!--         FROM movie WHERE title like'%${searchWord}%'-->
<!--        <choose>-->
<!--            <when test="title != null">-->
<!--                AND title like #{title}-->
<!--            </when>-->
<!--            <when test="ost!= null and ost != null">-->
<!--                AND ost like #{ost.seq}-->
<!--            </when>-->
<!--            <otherwise>-->
<!--                AND rank_date like '${rankDate}'-->
<!--            </otherwise>-->
<!--        </choose>-->
<!--    </select>-->
<!--    <update id="updateMovie" parameterType="com.lambda.web.music.MovieDTO">-->
<!--        update movie-->
<!--        <set>-->
<!--            <if test="rank != null">rank=#{rank},</if>-->
<!--            <if test="title != null">title=#{title},</if>-->
<!--            <if test="rank_date != null">rank_date=#{rank_date},</if>-->
<!--            <if test="gap != null">rank_date=#{rank_date}</if>-->
<!--        </set>-->
<!--        where movie_seq=#{movie_seq}-->
<!--    </update>-->
<!--    <select id="selectPostIn" resultType="com.lambda.web.music.MovieDTO">-->
<!--        SELECT *-->
<!--        FROM music m-->
<!--        WHERE seq in-->
<!--        <foreach item="movie" index="index" collection="list"-->
<!--                 open="(" separator="," close=")">-->
<!--            #{movie}-->
<!--        </foreach>-->
<!--    </select>-->
</mapper>
